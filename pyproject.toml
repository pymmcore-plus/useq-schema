# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "useq-schema"
description = "Schema for multi-dimensional microscopy experiments"
readme = "README.md"
keywords = ["microscopy", "schema"]
requires-python = ">=3.9"
license = { text = "BSD 3-Clause License" }
authors = [
    { email = "talley.lambert@gmail.com", name = "Talley Lambert" },
    { email = "federico.gasparoli@gmail.com", name = "Federico Gasparoli" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development",
    "Topic :: System :: Hardware",
    "Typing :: Typed",
]
dynamic = ["version"]
dependencies = ["pydantic >=2.6", "numpy", "typing-extensions"]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
yaml = ["PyYAML"]
test = ["pytest>=6.0", "pytest-cov", "PyYAML", "psygnal"]
dev = [
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "rich",
    "ruff",
    "PyYaml",
    "types-PyYAML",
]
docs = ["mkdocs >=1.4", "mkdocs-material", "mkdocstrings-python"]

[project.urls]
Source = "https://github.com/pymmcore-plus/useq-schema"
Tracker = "https://github.com/pymmcore-plus/useq-schema/issues"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# https://hatch.pypa.io/latest/config/build/#file-selection
[tool.hatch.build.targets.wheel]
packages = ["src/useq"]

# https://beta.ruff.rs/docs/rules/
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "W",    # style warnings
    "E",    # style errors
    "F",    # flakes
    "D",    # pydocstyle
    "I",    # isort
    "UP",   # pyupgrade
    "S",    # bandit
    "C4",   # comprehensions
    "B",    # bugbear
    "A001", # Variable shadowing a python builtin
    "TC",   # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "RUF",  # ruff-specific rules
    "PERF", # performance
    "SLF",  # private access
]
ignore = [
    "D100", # Missing docstring in public module
    "D401", # First line should be in imperative mood (remove to opt in)
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S101", "E501", "SLF"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true
plugins = ["pydantic.mypy"]

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.run]
source = ["useq"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "raise NotImplementedError",
]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
    "tox.ini",
    "setup.py",
]
