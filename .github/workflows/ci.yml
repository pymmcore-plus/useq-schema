name: tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request: {}
  workflow_dispatch:

jobs:
  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip3 install check-manifest && check-manifest

  test:
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@v2
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      coverage-upload: artifact
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.11", "3.12", "3.13"]
        include:
          - os: windows-latest
            python-version: "3.10"

  test-minreqs:
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@main
    with:
      os: ubuntu-latest
      python-version: ${{ matrix.python-version }}
      pip-install-min-reqs: true
      coverage-upload: artifact
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.12"]

  upload_coverage:
    if: always()
    needs: [test, test-minreqs]
    uses: pyapp-kit/workflows/.github/workflows/upload-coverage.yml@v2
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-dependents:
    uses: pyapp-kit/workflows/.github/workflows/test-dependents.yml@v2
    with:
      os: macos-13
      python-version: "3.11"
      dependency-repo: ${{ matrix.repo }}
      dependency-extras: "test"
      post-install-cmd: "mmcore install"
      qt: ${{ matrix.qt }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - repo: pymmcore-plus/pymmcore-plus
            qt: "pyqt6"
          - repo: pymmcore-plus/pymmcore-widgets
            qt: "pyqt6"
          # - repo: pymmcore-plus/napari-micromanager
          #   qt: "pyqt5"

  deploy:
    needs: test
    if: ${{ github.repository == 'pymmcore-plus/useq-schema' && contains(github.ref, 'tags') }}
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ðŸ‘· Build
        run: pipx run build

      - name: ðŸš¢ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: "./dist/*"
